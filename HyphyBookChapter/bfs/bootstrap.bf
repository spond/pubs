SetDialogPrompt("Select a nucleotide data file:");DataSet myData = ReadDataFile (PROMPT_FOR_FILE);DataSetFilter myFilter = CreateFilter (myData,1);HarvestFrequencies (obsFreqs, myFilter, 1, 1, 1);F81RateMatrix =                 {{* ,mu,mu,mu}                 {mu,* ,mu,mu}                 {mu,mu,* ,mu}                 {mu,mu,mu,* }};Model F81 = (F81RateMatrix, obsFreqs);Tree myTree = (a,b,og);LikelihoodFunction theLikFun = (myFilter, myTree);Optimize (paramValues, theLikFun);fprintf  (stdout, theLikFun);BSRes = {{0.0,0.0,0.0,0.0}};reps = 100;fprintf (stdout,   "\n\n| Simul. # |   Ln lik    | Branch A | Branch B | Branch O |\n");fprintf (stdout, "|----------|-------------|----------|----------|----------|\n");fprintf(stdout,"|Observed  | ",Format(paramValues[1][0],11,3)," | ",							   Format(paramValues[0][0],8,3)," | ",							   Format(paramValues[0][1],8,3)," | ",							   Format(paramValues[0][2],8,3)," | \n");fprintf (stdout, "|----------|-------------|----------|----------|----------|\n");VERBOSITY_LEVEL = -1;/* turn off all optimization feedback, even the status line,   because for such a small data set status line redraws   take more time than the optimization itself! */for (bsCounter = 1; bsCounter<=reps; bsCounter = bsCounter+1){	DataSetFilter bsFilter = Bootstrap(myFilter,1);	HarvestFrequencies (bsFreqs, bsFilter, 1, 1, 1);
	Model bsModel = (F81RateMatrix, bsFreqs);	Tree bsTree = (a,b,og);	LikelihoodFunction bsLik = (bsFilter, bsTree);	Optimize (bsParamValues, bsLik);
	fprintf (stdout, "|", Format(bsCounter,10,0));	fprintf (stdout,"| ", Format(bsParamValues[1][0],11,3)," | ", 						  Format(bsParamValues[0][0],8,3)," | ",						  Format(bsParamValues[0][1],8,3)," | ",						  Format(bsParamValues[0][2],8,3)," | \n");	BSRes[0] = BSRes[0] + bsParamValues[1][0];	BSRes[1] = BSRes[1] + bsParamValues[0][0];	BSRes[2] = BSRes[2] + bsParamValues[0][1];	BSRes[3] = BSRes[3] + bsParamValues[0][2];}fprintf (stdout, "|----------|-------------|----------|----------|----------|\n");fprintf(stdout,"|Averages: | ", Format(BSRes[0]/reps,11,3)," | ",								Format(BSRes[1]/reps,8,3)," | ",								Format(BSRes[2]/reps,8,3)," | ",								Format(BSRes[3]/reps,8,3),"\n\n");
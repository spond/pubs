SetDialogPrompt("Select a nucleotide data file:"); DataSet myData  = ReadDataFile(PROMPT_FOR_FILE);DataSetFilter myFilter = CreateFilter(myData,1);HarvestFrequencies(obsFreqs,myFilter,1,1,1);equalFreqs = {{0.25}{0.25}{0.25}{0.25}};myTopology = "(((a,b),c),d))"; /* Note: need a rooted tree! */F81RateMatrix  = {{*,m,m,m}{m,*,m,m}{m,m,*,m}{m,m,m,*}};Model F81 = (F81RateMatrix, obsFreqs);fprintf(stdout,"\n\n Unconstrained Analysis: \n");Tree myTree = myTopology;LikelihoodFunction theLikFun = (myFilter, myTree);Optimize(results,theLikFun);fprintf(stdout,theLikFun);unconstrainedLnLik = results[1][0];numparUn = results[1][1];fprintf(stdout,"\n\n Molecular Clock Analysis: \n");MolecularClock(myTree,m);LikelihoodFunction theLikFun = (myFilter, myTree);Optimize(results,theLikFun);fprintf(stdout,theLikFun);constrainedLnLik = results[1][0];numparCon = results[1][1];lnlikDelta = 2 (unconstrainedLnLik-constrainedLnLik);pValue = 1-CChi2 (lnlikDelta, numparUn - numparCon);fprintf (stdout, "\n\n P-value for Global Molecular Clock Test:", pValue, "\n");